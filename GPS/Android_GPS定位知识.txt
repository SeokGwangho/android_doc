在Android上做GPS开发，不需要自己讀取GPS NMEA資料来分析，Android已經封裝好了相關服務，你要做的就是呼API。
-----------------------------------------------------------
1、Android 定位服務
-----------------------------------------------------------
下面我們先來看看Android有關定位服務提供的支援：

Android定位服務都是位於location下，上面都有相關說明。

-----------------------------------------------------------
2、LocationManager定位
-----------------------------------------------------------
複製程式碼 程式碼如下:
//獲取定位服務
LocationManager locationManager = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);
//判斷是否已經開啟GPS模組
if (locationManager.isProviderEnabled(android.location.LocationManager.GPS_PROVIDER)) 
{
　　//GPS模組開啟，可以定位操作      
}

複製程式碼 程式碼如下:
// 通過GPS定位
String LocateType= locationManager.GPS_PROVIDER;
Location location = locationManager.getLastKnownLocation(LocateType);
// 設定監聽器，設定自動更新間隔這裡設定1000ms，移動距離：0米。
locationManager.requestLocationUpdates(provider, 1000, 0, locationListener);
// 設定狀態監聽回撥函式。statusListener是監聽的回撥函式。
locationManager.addGpsStatusListener(statusListener); 
//另外給出 通過network定位設定
String LocateType= locationManager.NETWORK_PROVIDER;
Location location = locationManager.getLastKnownLocation(LocateType);

-----------------------------------------------------------
3、GpsStatus監聽器
-----------------------------------------------------------
上面給出了定位服務的初始化設定步驟，但我們都知道GPS衛星是定期廣播資料的，也就是說會定期收到衛星的GPS資料。
我們並不能跟衛星主動申請資料，只能被動接收資料。（中國的北斗2倒是可以傳送衛星報文給衛星）
因此我們需要註冊一個監聽器，來處理衛星返回的資料。

private final GpsStatus.Listener statusListener = new GpsStatus.Listener() 
{
    public void onGpsStatusChanged(int event) 
　　{
     　// GPS狀態變化時的回撥，獲取當前狀態
    　 GpsStatus status = locationManager.getGpsStatus(null);
　　　　//自己編寫的方法，獲取衛星狀態相關資料
       GetGPSStatus(event, status);
    }
};

獲取搜尋到的衛星：
private void GetGPSStatus(int event, GpsStatus status) 
{
    Log.d(TAG, “enter the updateGpsStatus()”);
    if (status == null) 
    {
    } 
　　 else if (event == GpsStatus.GPS_EVENT_SATELLITE_STATUS) 
    {
　　　　 //獲取最大的衛星數（這個只是一個預設值）
        int maxSatellites = status.getMaxSatellites();
        Iterator<GpsSatellite> it = status.getSatellites().iterator();
        numSatelliteList.clear();
　　　　 //記錄實際的衛星數目
        int count = 0;
        while (it.hasNext() && count <= maxSatellites) 
        {
　　　　　　 //儲存衛星的資料到一個佇列，用於重新整理介面
            GpsSatellite s = it.next();
            numSatelliteList.add(s);
            count ;

            Log.d(TAG, “updateGpsStatus—-count=” count);
        }
        mSatelliteNum = numSatelliteList.size();
     }
     else if(event==GpsStatus.GPS_EVENT_STARTED)
     {  
         //定位啟動   
     }
     else if(event==GpsStatus.GPS_EVENT_STOPPED)
     {  
         //定位結束   
     }
}

上面就是從狀態值裡面獲取搜尋到的衛星數目，主要是通過status.getSatellites()實現。
獲取到的GpsSatellite物件，儲存到一個佇列裡面，用於後面重新整理介面。

上面是獲取GPS狀態監聽器，除了GPS狀態外，我們還需要監聽一個服務，就是：LocationListener，定位監聽器，監聽位置的變化。

這個對做定位服務的應用來說，十分重要。
-----------------------------------------------------------
5、LocationListener監聽器
-----------------------------------------------------------
private final LocationListener locationListener = new LocationListener() 
{
        public void onLocationChanged(Location location) 
　　　　 {
            //當座標改變時觸發此函式，如果Provider傳進相同的座標，它就不會被觸發
            updateToNewLocation(location);            
            Log.d(TAG, “LocationListener  onLocationChanged”);
        }
        public void onProviderDisabled(String provider) 
　　　　 {
            //Provider被disable時觸發此函式，比如GPS被關閉
            Log.d(TAG, “LocationListener  onProviderDisabled”);
        }
        public void onProviderEnabled(String provider) 
　　　　 {
            // Provider被enable時觸發此函式，比如GPS被開啟
            Log.d(TAG, “LocationListener  onProviderEnabled”);
        }
        public void onStatusChanged(String provider, int status, Bundle extras) 
　　　　 {
            Log.d(TAG, “LocationListener  onStatusChanged”);
            // Provider的轉態在可用、暫時不可用和無服務三個狀態直接切換時觸發此函式
            if (status == LocationProvider.OUT_OF_SERVICE || status == LocationProvider.TEMPORARILY_UNAVAILABLE) 　　　　　　{　　　　
            }
        }
    };

位置監聽回撥是用來處理GPS位置發生變化的時候，自動回撥的方法，我們可以從這裡獲取到當前的GPS資料。
另外我們可以通過回撥函式提供的location引數，獲取GPS的地理位置資訊，包括經緯度、速度、海拔等資訊。
-----------------------------------------------------------
6、獲取地理位置資訊（經緯度、衛星數目、海拔、定位狀態）
-----------------------------------------------------------
//location物件是從上面定位服務回撥函式的引數獲取。
mLatitude = location.getLatitude();　　　// 經度
mLongitude = location.getLongitude();　 // 緯度
mAltitude = location.getAltitude(); 　　//海拔
mSpeed = location.getSpeed(); 　　　　　 //速度
mBearing = location.getBearing(); 　　　//方向
-----------------------------------------------------------
7、獲取指定衛星資訊（方向角、高度角、訊雜比）
-----------------------------------------------------------
//temgGpsSatellite就是我們上面儲存的搜尋到的衛星

//方向角
float azimuth = temgGpsSatellite.getAzimuth();
//高度角
float elevation = temgGpsSatellite.getElevation();
//訊雜比
float snr = temgGpsSatellite.getSnr();

利用方向角、高度角我們可以繪畫出一個二維圖形，表示衛星在地球哪個方位，訊雜比作用更大。

一般的衛星定位測試軟體，都提供了訊雜比的狀態圖，這是表示GPS模組搜星能力的代表。
